> While native apps have more UX, mobile-web apps have more user base. SO, if we were to convert mobile-web app behavior into native apps-like behavior, then it be a win for us.
> What is PWAs?
  -- Progressive web apps. Normal web apps, with "rpogressive enhancement" can be converted into progressive web app. A typical progressive web app, will allow some basic user interaction, even if there is no internet. Once internet comes back on, push notifications can be enabled.

Lets look at some of the features which will make mobile-web apps behve like native-mobile apps

> Installable. They should have an icon on the mobile phone, rather than the user typing the mobile web url
> Manifest.json
  - For non-SPA, you have to add below line to all *.html, which translates into a route.
  - For SPA, you have to add below line only at index.html
      <link rel="manifest" src="/manifest.json" />
    manifest.json is typically put at the root of the web files, for eg. for SPA, it is put in the folder where index.html resides.
> Service Workers. This is major.
  - Service Workers are vanilla js, which allow to :-
      >> dynamically cache API responses into indexed DB
      >> cache management of browser
      >> push notification. (eg. we add something offline and when internet comes back up, the user is alerted of it).
      >> background data sync
      >> background queue management.
      >> etc.
      
---

manifest.json:-
below are the key-value pairs of this json obj {}
  > "name" : ""  // used in a splashscreen
  > "short_name" : ""
  > "start_url" : "" // when on home-screen, as an icon, what should happen when user taps/touches it.
  > "scope" : "" // ., ./sub-folder/, etc. here u can make only a part of ur application as a pwa.
  > "display": "standalone" // default choice. makes it look a native app
  > "background_color" : "#fff" // bckground when loading splashscreen
  > "theme_color" : "#3F51B5" // theme color, on top bar in task switcher.
  > "description" : ""
  > "dir" : "ltr" // direction: left to right
  > "lang" : "en-US"
  > "orientation" : "portrait-primary" // set default orientation, though it affects
  > "icons" : [...,
                {
                  "src": "src/images.../icon-48x48.png",
                  "type": "image/png",
                  "sizes" : "48x48" // browser chosses the best sizes.
                },
                {
                  "src": "src/images.../icon-96x96.png",
                  "type": "image/png",
                  "sizes" : "96x96"
                }
              ]
              
   > "related_applications" : [  // these are native apps !!! vimp !! these are NOT web-apps. 
                                 // browser uses it to display msg to user if he wants to use native app/PWA app.
                {
                  "platform": "play"
                  "url": "https://play.google.com/store/apps/details?id=com.example.app1",
                  "id": "com.example.app1"
                }
              ]
  
---
PWAs and browser support
- manifest.json is not supported by many browsers, but dont worry for such old broswers, it will just ignore the manifest.json.
- Unde dev tools-> Application (this is the part when all PWA-related settings are)
  > "Manifest": Click this option and it should detect ur manifest.json. This shows most options in the manifest.json
  > "Service Workers": 
---

> To see our app on a home-screen on the phone, install android studio + any AVD manager + open chrome + goto 10.0.2.2:8080 
(localhost wont work on the virtual device)
> click the 3 vertical dots + add to home screen
> when u click on it, it will launch a "standalone instance with our icon" ; u can very this using the task-switcher on the phone, 
it will show the chrome version + the standalone version of our app.

---

though we can "add to home screen" using chrome, it would be nice that when the user visits our site, chrome auto prompts the user
for an installation. For this, we will have to create a banner 
[ that pops up at the bottom on chrome (when the user visits our site on the virtual device in android studio) ]



---



